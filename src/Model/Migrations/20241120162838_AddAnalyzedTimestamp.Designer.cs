// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Refrase.Model;

#nullable disable

namespace Refrase.Model.Migrations
{
    [DbContext(typeof(RefraseContext))]
    [Migration("20241120162838_AddAnalyzedTimestamp")]
    partial class AddAnalyzedTimestamp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Refrase.Model.Frames.Frame", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<ulong?>("Hash")
                        .HasColumnType("INTEGER")
                        .HasColumnName("hash");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER")
                        .HasColumnName("index");

                    b.Property<TimeSpan>("Timestamp")
                        .HasColumnType("TEXT")
                        .HasColumnName("timestamp");

                    b.Property<long>("VideoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("video_id");

                    b.HasKey("Id")
                        .HasName("pk_frames");

                    b.HasIndex("VideoId", "Index")
                        .IsUnique()
                        .HasDatabaseName("ix_frames_video_id_index");

                    b.ToTable("frames", (string)null);
                });

            modelBuilder.Entity("Refrase.Model.Videos.Video", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Analyzed")
                        .HasColumnType("TEXT")
                        .HasColumnName("analyzed");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("category");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT")
                        .HasColumnName("duration");

                    b.Property<int>("FrameCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("frame_count");

                    b.Property<float>("FrameRate")
                        .HasColumnType("REAL")
                        .HasColumnName("frame_rate");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER")
                        .HasColumnName("height");

                    b.Property<DateTime>("Imported")
                        .HasColumnType("TEXT")
                        .HasColumnName("imported");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT")
                        .HasColumnName("url");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER")
                        .HasColumnName("width");

                    b.HasKey("Id")
                        .HasName("pk_videos");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_videos_name");

                    b.ToTable("videos", (string)null);
                });

            modelBuilder.Entity("Refrase.Model.Frames.Frame", b =>
                {
                    b.HasOne("Refrase.Model.Videos.Video", "Video")
                        .WithMany("Frames")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_frames_videos_video_id");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Refrase.Model.Videos.Video", b =>
                {
                    b.Navigation("Frames");
                });
#pragma warning restore 612, 618
        }
    }
}
